<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<context:component-scan base-package="com.naah.DAO"></context:component-scan>
	
	<context:annotation-config></context:annotation-config>
	
	<!-- 定义数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/TSW">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="naah546969"></property>
	</bean>
	
	<!-- sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect
				</prop>
				 <prop key="hibernate.show_sql">true</prop> 
				 <prop key="hibernate.format_sql">true</prop>
				 <prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/naah/PO/Areas.hbm.xml</value>
				<value>com/naah/PO/Donatepersontable.hbm.xml</value>
				<value>com/naah/PO/Illnesshelptable.hbm.xml</value>
				<value>com/naah/PO/Onetoonetable.hbm.xml</value>
				<value>com/naah/PO/Operationlogs.hbm.xml</value>
				<value>com/naah/PO/Privileges.hbm.xml</value>
				<value>com/naah/PO/Singleyouthtable.hbm.xml</value>
				<value>com/naah/PO/Universitytable.hbm.xml</value>
				<value>com/naah/PO/Userprivileges.hbm.xml</value>
				<value>com/naah/PO/Users.hbm.xml</value>
				<value>com/naah/PO/Wishtable.hbm.xml</value>
				<value>com/naah/PO/Youthlawhelptable.hbm.xml</value>
				<value>com/naah/PO/Youthmentalitytable.hbm.xml</value>
				<value>com/naah/PO/Youthworktable.hbm.xml</value>
				</list>
		</property>
	</bean>
	
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory"  />
	</bean>
	
	
	<!-- 注解事务管理 -->
 <tx:annotation-driven transaction-manager="transactionManager"  /> 


	<!-- xml事务管理 -->

<!-- 	 事务通知与切面组合 
	<aop:config>
		定义切面
		<aop:pointcut expression="execution(public * com.naah.service.*.*(..))"  id="businessService"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" />
	</aop:config>
	
	
	定义事务通知
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
			get开头的方法不需要在事务中运行 。 有些情况是没有必要使用事务的，比如获取数据。开启事务本身对性能是有一定的影响的
			<tx:method name="*" />    其他方法在实务中运行
		</tx:attributes>
	</tx:advice>  -->


</beans>
	
	